name: CI

on: [push]

env:
  NODE_VERSION: 16.x

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2
        id: node-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

  lint:
    runs-on: ubuntu-latest
    needs: [install]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Run linters
        uses: wearerequired/lint-action@v1
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          auto_fix: true
          eslint: true
          eslint_extensions: 'js,jsx,ts,tsx'
          prettier: true
          prettier_extensions: 'js,jsx,ts,tsx,css,html,scss,yaml,yml'

  test:
    runs-on: ubuntu-latest
    needs: [install]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Test
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: [install]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Build
        run: npm run build
      - name: Create template files
        run: |
          rm -rf template/
          mkdir template
          cp -a ./src/. template/src
          cp -a ./public/. template/public
          cp .gitignore template/gitignore
          cp .eslintrc .eslintignore .prettierrc tsconfig.json README.md template/
#      - name: Release
#        uses: cycjimmy/semantic-release-action@v2
#        id: semantic
#        with:
#          branch: master
#          extra_plugins: |
#            @semantic-release/git
#            @semantic-release/changelog
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
